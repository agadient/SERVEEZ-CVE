/* greetings from -*-c-*- init snarfer c2x! */
 libserveez_features__name = scm_string_to_symbol (libserveez_features__name_string) ;
 libserveez_features__raw_objtable[2] = libserveez_features__subr_foreign; libserveez_features__raw_objtable[3] = libserveez_features__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((libserveez_features__subr))): (libserveez_features__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 0, 0))))); scm_define (libserveez_features__name, libserveez_features__subr); 
 guile_config_instantiate__name = scm_string_to_symbol (guile_config_instantiate__name_string) ;
 guile_config_instantiate__raw_objtable[2] = guile_config_instantiate__subr_foreign; guile_config_instantiate__raw_objtable[3] = guile_config_instantiate__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_config_instantiate__subr))): (guile_config_instantiate__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (3, 1, 0))))); scm_define (guile_config_instantiate__name, guile_config_instantiate__subr); 
 guile_define_server__name = scm_string_to_symbol (guile_define_server__name_string) ;
 guile_define_server__raw_objtable[2] = guile_define_server__subr_foreign; guile_define_server__raw_objtable[3] = guile_define_server__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_define_server__subr))): (guile_define_server__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (1, 1, 0))))); scm_define (guile_define_server__name, guile_define_server__subr); 
 guile_define_port__name = scm_string_to_symbol (guile_define_port__name_string) ;
 guile_define_port__raw_objtable[2] = guile_define_port__subr_foreign; guile_define_port__raw_objtable[3] = guile_define_port__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_define_port__subr))): (guile_define_port__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (2, 0, 0))))); scm_define (guile_define_port__name, guile_define_port__subr); 
 guile_bind_server__name = scm_string_to_symbol (guile_bind_server__name_string) ;
 guile_bind_server__raw_objtable[2] = guile_bind_server__subr_foreign; guile_bind_server__raw_objtable[3] = guile_bind_server__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_bind_server__subr))): (guile_bind_server__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (2, 0, 0))))); scm_define (guile_bind_server__name, guile_bind_server__subr); 
 guile_access_interfaces__name = scm_string_to_symbol (guile_access_interfaces__name_string) ;
 guile_access_interfaces__raw_objtable[2] = guile_access_interfaces__subr_foreign; guile_access_interfaces__raw_objtable[3] = guile_access_interfaces__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_access_interfaces__subr))): (guile_access_interfaces__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 1, 0))))); scm_define (guile_access_interfaces__name, guile_access_interfaces__subr); 
 guile_access_loadpath__name = scm_string_to_symbol (guile_access_loadpath__name_string) ;
 guile_access_loadpath__raw_objtable[2] = guile_access_loadpath__subr_foreign; guile_access_loadpath__raw_objtable[3] = guile_access_loadpath__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_access_loadpath__subr))): (guile_access_loadpath__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 1, 0))))); scm_define (guile_access_loadpath__name, guile_access_loadpath__subr); 
 guile_check_port__name = scm_string_to_symbol (guile_check_port__name_string) ;
 guile_check_port__raw_objtable[2] = guile_check_port__subr_foreign; guile_check_port__raw_objtable[3] = guile_check_port__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_check_port__subr))): (guile_check_port__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (1, 0, 0))))); scm_define (guile_check_port__name, guile_check_port__subr); 
 guile_check_server__name = scm_string_to_symbol (guile_check_server__name_string) ;
 guile_check_server__raw_objtable[2] = guile_check_server__subr_foreign; guile_check_server__raw_objtable[3] = guile_check_server__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_check_server__subr))): (guile_check_server__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (1, 0, 0))))); scm_define (guile_check_server__name, guile_check_server__subr); 
 guile_check_stype__name = scm_string_to_symbol (guile_check_stype__name_string) ;
 guile_check_stype__raw_objtable[2] = guile_check_stype__subr_foreign; guile_check_stype__raw_objtable[3] = guile_check_stype__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_check_stype__subr))): (guile_check_stype__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (1, 0, 0))))); scm_define (guile_check_stype__name, guile_check_stype__subr); 
 guile_access_verbosity__name = scm_string_to_symbol (guile_access_verbosity__name_string) ;
 guile_access_verbosity__raw_objtable[2] = guile_access_verbosity__subr_foreign; guile_access_verbosity__raw_objtable[3] = guile_access_verbosity__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_access_verbosity__subr))): (guile_access_verbosity__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 1, 0))))); scm_define (guile_access_verbosity__name, guile_access_verbosity__subr); 
 guile_access_maxsockets__name = scm_string_to_symbol (guile_access_maxsockets__name_string) ;
 guile_access_maxsockets__raw_objtable[2] = guile_access_maxsockets__subr_foreign; guile_access_maxsockets__raw_objtable[3] = guile_access_maxsockets__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_access_maxsockets__subr))): (guile_access_maxsockets__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 1, 0))))); scm_define (guile_access_maxsockets__name, guile_access_maxsockets__subr); 
 guile_access_passwd__name = scm_string_to_symbol (guile_access_passwd__name_string) ;
 guile_access_passwd__raw_objtable[2] = guile_access_passwd__subr_foreign; guile_access_passwd__raw_objtable[3] = guile_access_passwd__name; (((((SCM *)((scm_t_cell *) (((scm_t_bits) (0? (*(volatile SCM *)0=((guile_access_passwd__subr))): (guile_access_passwd__subr)))))) [(1)]) = ((scm_subr_objcode_trampoline (0, 1, 0))))); scm_define (guile_access_passwd__name, guile_access_passwd__subr); 
